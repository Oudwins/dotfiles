// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+alt+f",
    "command": "filesExplorer.findInWorkspace"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+space",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineEdit.accept",
    "when": "cursorAtInlineEdit && inlineEditVisible && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineEdit.accept",
    "when": "cursorAtInlineEdit && inlineEditVisible && !editorReadonly"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+y",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+y",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "shift+tab",
    "command": "-insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+y",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-jumpToNextSnippetPlaceholder",
    "when": "hasNextTabstop && inSnippetMode && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-togglePeekWidgetFocus",
    "when": "referenceSearchVisible || inReferenceSearchEditor && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+y",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "enter",
    "command": "editor.action.inlineEdits.accept",
    "when": "inlineEditsVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.inlineEdits.accept",
    "when": "inlineEditsVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space k",
    "command": "aipopup.action.modal.generate",
    "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "-aipopup.action.modal.generate",
    "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible"
  },
  {
    "key": "ctrl+space i",
    "command": "composer.startComposerPrompt",
    "when": "composerIsEnabled"
  },
  {
    "key": "ctrl+i",
    "command": "-composer.startComposerPrompt",
    "when": "composerIsEnabled"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineDiffs.acceptAll",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+space l",
    "command": "aichat.newchataction"
  },
  {
    "key": "ctrl+l",
    "command": "-aichat.newchataction"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.acceptGPT4",
    "when": "hasGPT4Diff"
  },
  {
    "key": "tab",
    "command": "-editor.action.acceptGPT4",
    "when": "hasGPT4Diff"
  },
  {
    "key": "ctrl+y",
    "command": "workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.inlineSuggest.trigger"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send-cmdline",
    "when": "neovim.init && neovim.mode == 'cmdline'"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send",
    "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineDiffs.acceptAll"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+n",
    "command": "composer.createNew",
    "when": "focusedView == 'workbench.panel.composerViewPane2.view'"
  },
  {
    "key": "ctrl+n",
    "command": "-composer.createNew",
    "when": "focusedView == 'workbench.panel.composerViewPane2.view'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.panel.composerViewPane2"
  },
  {
    "key": "ctrl+i",
    "command": "composerMode.agent"
  }
  // {
  //   "key": "tab",
  //   "command": "tab",
  //   "when": "editorTextFocus && !editorTabMovesFocus"
  // }
]
